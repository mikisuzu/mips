// Verilated -*- C++ -*-
// DESCRIPTION: Verilator output: Design internal header
// See VMIPS.h for the primary calling header

#ifndef _VMIPS_MIPS_H_
#define _VMIPS_MIPS_H_

#include "verilated.h"
#include "VMIPS__Inlines.h"
class VMIPS__Syms;

//----------

VL_MODULE(VMIPS_MIPS) {
  public:
    // CELLS
    
    // PORTS
    VL_IN8(CLK,0,0);
    VL_IN8(RESET,0,0);
    VL_OUT8(MemRead,0,0);
    VL_OUT8(MemWrite,0,0);
    VL_OUT8(dBlkRead,0,0);
    VL_OUT8(dBlkWrite,0,0);
    VL_OUT8(iBlkRead,0,0);
    VL_OUT8(iBlkWrite,0,0);
    VL_IN8(do_delay_syscall,0,0);
    //char	__VpadToAlign9[3];
    VL_OUT(R2_output,31,0);
    VL_OUT(data_address_2DM,31,0);
    VL_OUT(data_write_2DM,31,0);
    VL_OUTW(block_write_2DM,255,0,8);
    VL_OUTW(block_write_2IM,255,0,8);
    VL_IN(PC_init,31,0);
    VL_IN(R2_input,31,0);
    VL_INW(block_read_fDM,255,0,8);
    VL_INW(block_read_fIM,255,0,8);
    
    // LOCAL SIGNALS
    VL_SIG8(MVECT,1,0);
    VL_SIG8(__PVT__IMISS,0,0);
    VL_SIG8(__PVT__DataWriteMode,1,0);
    VL_SIG8(__PVT__DMISS,0,0);
    VL_SIG8(FREEZE,0,0);
    VL_SIG8(empty_ROB,0,0);
    VL_SIG8(__PVT__ROB_tail,5,0);
    VL_SIG8(__PVT__ROB_head,5,0);
    VL_SIG8(__PVT__reg_counter,5,0);
    VL_SIG8(__PVT__do_write_IDQUEUE,0,0);
    VL_SIG8(SYS,0,0);
    VL_SIG8(no_fetch,0,0);
    VL_SIG8(single_fetch_IDIF,0,0);
    VL_SIG8(__PVT__do_write_RNQUEUE,0,0);
    VL_SIG8(__PVT__do_write_2ROB,0,0);
    VL_SIG8(__PVT__do_read_RNQUEUE,0,0);
    VL_SIG8(__PVT__do_wirte_2ISSQ,0,0);
    VL_SIG8(__PVT__do_wirte_2LSQ,0,0);
    VL_SIG8(do_writeback1_EXEM,0,0);
    VL_SIG8(writeRegister1_EXEM,5,0);
    VL_SIG8(do_writeback1_EXEM_LS,0,0);
    VL_SIG8(writeRegister1_EXEM_LS,5,0);
    VL_SIG8(do_writeback1_MEMW,0,0);
    VL_SIG8(writeRegister1_MEMW,5,0);
    VL_SIG8(do_writeback1_MEMW_LS,0,0);
    VL_SIG8(writeRegister1_MEMW_LS,5,0);
    VL_SIG8(do_writeback1_WBEXE,0,0);
    VL_SIG8(writeRegister1_WBEXE,5,0);
    VL_SIG8(do_writeback1_WBID,0,0);
    VL_SIG8(writeRegister1_WBID,5,0);
    VL_SIG8(do_writeback1_WBEXE_LS,0,0);
    VL_SIG8(writeRegister1_WBEXE_LS,5,0);
    VL_SIG8(do_writeback1_WBID_LS,0,0);
    VL_SIG8(writeRegister1_WBID_LS,5,0);
    VL_SIG8(__PVT__do_reclaim_OUT,0,0);
    VL_SIG8(mispredict_OUT,0,0);
    VL_SIG8(__PVT__do_read_2ROB,0,0);
    VL_SIG8(__PVT__do_issue_out,0,0);
    VL_SIG8(__PVT__do_issue_LS,0,0);
    VL_SIG8(debug_2SIM,0,0);
    VL_SIG8(__PVT__iCache1__DOT__hit1,0,0);
    VL_SIG8(__PVT__iCache1__DOT__waitCount,3,0);
    VL_SIG8(__PVT__dCache1__DOT__hit0,0,0);
    VL_SIG8(__PVT__dCache1__DOT__hit1,0,0);
    VL_SIG8(__PVT__dCache1__DOT__waitCount,3,0);
    VL_SIG8(__PVT__ROB1__DOT__do_writeback1_in,0,0);
    VL_SIG8(__PVT__ROB1__DOT__do_writeback1_out,0,0);
    VL_SIG8(__PVT__ROB1__DOT__counter,6,0);
    VL_SIG8(__PVT__ID_Queue1__DOT__counter,3,0);
    VL_SIG8(__PVT__ID_Queue1__DOT__head,2,0);
    VL_SIG8(__PVT__ID_Queue1__DOT__tail,2,0);
    VL_SIG8(__PVT__ID1__DOT__ALU_control1,5,0);
    VL_SIG8(__PVT__ID1__DOT__opcode1,5,0);
    VL_SIG8(__PVT__ID1__DOT__funct1,5,0);
    VL_SIG8(__PVT__ID1__DOT__format1,4,0);
    VL_SIG8(__PVT__ID1__DOT__rt1,4,0);
    VL_SIG8(__PVT__ID1__DOT__writeRegister1,4,0);
    VL_SIG8(__PVT__ID1__DOT__link1,0,0);
    VL_SIG8(__PVT__ID1__DOT__RegDst1,0,0);
    VL_SIG8(__PVT__ID1__DOT__jump1,0,0);
    VL_SIG8(__PVT__ID1__DOT__branch1,0,0);
    VL_SIG8(__PVT__ID1__DOT__MemRead1,0,0);
    VL_SIG8(__PVT__ID1__DOT__MemtoReg1,0,0);
    VL_SIG8(__PVT__ID1__DOT__MemWrite1,0,0);
    VL_SIG8(__PVT__ID1__DOT__ALUSrc1,0,0);
    VL_SIG8(__PVT__ID1__DOT__RegWrite1,0,0);
    VL_SIG8(__PVT__ID1__DOT__jumpRegister_Flag1,0,0);
    VL_SIG8(__PVT__ID1__DOT__sign_or_zero_Flag1,0,0);
    VL_SIG8(__PVT__ID1__DOT__syscal1,0,0);
    VL_SIG8(__PVT__ID1__DOT__syscalBubbleCounter,2,0);
    VL_SIG8(__PVT__RN_Queue1__DOT__counter,3,0);
    VL_SIG8(__PVT__RN_Queue1__DOT__head,2,0);
    VL_SIG8(__PVT__RN_Queue1__DOT__tail,2,0);
    VL_SIG8(__PVT__RN1__DOT__in,5,0);
    VL_SIG8(__PVT__RN1__DOT__out,5,0);
    VL_SIG8(__PVT__RN1__DOT__freelist_counter,6,0);
    VL_SIG8(__PVT__RN1__DOT__write_phyReg1,5,0);
    VL_SIG8(__PVT__RN1__DOT__RAT_entry_A1,6,0);
    VL_SIG8(__PVT__RN1__DOT__RAT_entry_B1,6,0);
    VL_SIG8(__PVT__RN1__DOT__ROB_num,5,0);
    VL_SIG8(__PVT__RN1__DOT__MemOperation,0,0);
    VL_SIG8(__PVT__ISSUE_QUEUE_ALU__DOT__R0,0,0);
    VL_SIG8(__PVT__ISSUE_QUEUE_ALU__DOT__R1,0,0);
    VL_SIG8(__PVT__ISSUE_QUEUE_ALU__DOT__R2,0,0);
    VL_SIG8(__PVT__ISSUE_QUEUE_ALU__DOT__R3,0,0);
    VL_SIG8(__PVT__ISSUE_QUEUE_ALU__DOT__G1,0,0);
    VL_SIG8(__PVT__ISSUE_QUEUE_ALU__DOT__G2,0,0);
    VL_SIG8(__PVT__ISSUE_QUEUE_ALU__DOT__G3,0,0);
    VL_SIG8(__PVT__ISSUE_QUEUE_ALU__DOT__out_entry_index,3,0);
    VL_SIG8(__PVT__ISSUE_QUEUE_ALU__DOT__counter,4,0);
    VL_SIG8(__PVT__RR_ALU__DOT__readRegisterA1_OUT,5,0);
    VL_SIG8(__PVT__RR_ALU__DOT__readRegisterB1_OUT,5,0);
    VL_SIG8(__PVT__RR_ALU__DOT__taken_branch1,0,0);
    VL_SIG8(__PVT__EXE_ALU__DOT__ALU1__DOT__i,4,0);
    VL_SIG8(__PVT__MEM_ALU__DOT__ALU_control,5,0);
    VL_SIG8(__PVT__LSQ_LS__DOT__counter,4,0);
    VL_SIG8(__PVT__LSQ_LS__DOT__head,3,0);
    VL_SIG8(__PVT__LSQ_LS__DOT__tail,3,0);
    VL_SIG8(__PVT__RR_LS__DOT__readRegisterA1_OUT,5,0);
    VL_SIG8(__PVT__RR_LS__DOT__readRegisterB1_OUT,5,0);
    VL_SIG8(__PVT__RR_LS__DOT__taken_branch1,0,0);
    VL_SIG8(__PVT__EXE_LS__DOT__ALU1__DOT__i,4,0);
    VL_SIG8(__PVT__MEM_LS__DOT__ALU_control,5,0);
    VL_SIG8(__PVT__COM1__DOT__RAT_entry,6,0);
    VL_SIG16(__PVT__debugs,15,0);
    //char	__VpadToAlign270[2];
    VL_SIG(Instr1_fIC,31,0);
    VL_SIG(Instr2_fIC,31,0);
    VL_SIG(__PVT__data_read_fDC,31,0);
    //char	__VpadToAlign284[4];
    VL_SIGW(__PVT__data_out_fROB,191,0,6);
    VL_SIG(Instr_address_2IM,31,0);
    VL_SIG(Instr1_IFID,31,0);
    VL_SIG(Instr2_IFID,31,0);
    VL_SIG(R2_output_ID,31,0);
    VL_SIGW(__PVT__data_2ROB,191,0,6);
    VL_SIGW(__PVT__issue_entry,191,0,6);
    VL_SIGW(__PVT__exe_entry,319,0,10);
    VL_SIGW(__PVT__exe_entry_LS,319,0,10);
    VL_SIG(aluResult1_EXEID,31,0);
    //char	__VpadToAlign460[4];
    VL_SIGW(__PVT__mem_entry,319,0,10);
    VL_SIG(aluResult1_EXEID_LS,31,0);
    //char	__VpadToAlign508[4];
    VL_SIGW(__PVT__mem_entry_LS,319,0,10);
    VL_SIG(writeData1_MID,31,0);
    VL_SIG(Instr_fMEM_ALU,31,0);
    VL_SIGW(__PVT__retire_entry,255,0,8);
    VL_SIG(writeData1_MID_LS,31,0);
    VL_SIG(Instr_fMEM,31,0);
    VL_SIGW(__PVT__retire_entry_LS,255,0,8);
    VL_SIG(writeData1_WBEXE,31,0);
    VL_SIG(aluResult1_WBID,31,0);
    VL_SIG(writeData1_WBID,31,0);
    //char	__VpadToAlign644[4];
    VL_SIGW(__PVT__com_entry,191,0,6);
    VL_SIG(writeData1_WBEXE_LS,31,0);
    VL_SIG(aluResult1_WBID_LS,31,0);
    VL_SIG(writeData1_WBID_LS,31,0);
    //char	__VpadToAlign684[4];
    VL_SIGW(__PVT__com_entry_LS,191,0,6);
    VL_SIGW(__PVT__remend_data_2ROB,64,0,3);
    //char	__VpadToAlign724[4];
    VL_SIGW(__PVT__decode_entry_fFIFO,95,0,3);
    //char	__VpadToAlign740[4];
    VL_SIGW(__PVT__rename_entry_fFIFO,159,0,5);
    //char	__VpadToAlign764[4];
    VL_SIGW(__PVT__out_issue_entry,191,0,6);
    VL_SIGW(__PVT__data_out_fLSQ,191,0,6);
    VL_SIGW(__PVT__iCache1__DOT__cc0__DOT__valid,1023,0,32);
    VL_SIGW(__PVT__iCache1__DOT__cc0__DOT__dirty,1023,0,32);
    VL_SIGW(__PVT__iCache1__DOT__cc0__DOT__block_out1,255,0,8);
    VL_SIGW(__PVT__iCache1__DOT__cc0__DOT__block_out2,255,0,8);
    VL_SIGW(__PVT__dCache1__DOT__block_out0,255,0,8);
    VL_SIGW(__PVT__dCache1__DOT__block_out1,255,0,8);
    VL_SIGW(__PVT__dCache1__DOT__policy,256,0,9);
    //char	__VpadToAlign1236[4];
    VL_SIGW(__PVT__dCache1__DOT__cc0__DOT__valid,511,0,16);
    VL_SIGW(__PVT__dCache1__DOT__cc0__DOT__dirty,511,0,16);
    VL_SIGW(__PVT__dCache1__DOT__cc1__DOT__valid,511,0,16);
    VL_SIGW(__PVT__dCache1__DOT__cc1__DOT__dirty,511,0,16);
    VL_SIG(__PVT__IF1__DOT__PC,31,0);
    VL_SIG(__PVT__IF1__DOT__FPC,31,0);
    VL_SIG(__PVT__RR_ALU__DOT__com_OpA1,31,0);
    VL_SIG(__PVT__RR_ALU__DOT__com_OpB1,31,0);
    VL_SIG(__PVT__RR_ALU__DOT__signExtended_output1,31,0);
    VL_SIG(__PVT__RR_ALU__DOT__readDataA1,31,0);
    VL_SIG(__PVT__RR_ALU__DOT__readDataB1,31,0);
    VL_SIG(__PVT__RR_ALU__DOT__Operand_A1,31,0);
    VL_SIG(__PVT__RR_ALU__DOT__Operand_B1,31,0);
    VL_SIG(__PVT__RR_ALU__DOT__Dest_Value1,31,0);
    VL_SIGW(__PVT__RR_ALU__DOT__exe_entry_PR,319,0,10);
    VL_SIG(__PVT__EXE_ALU__DOT__aluResult1,31,0);
    VL_SIG(__PVT__EXE_ALU__DOT__OpA1,31,0);
    VL_SIG(__PVT__EXE_ALU__DOT__OpB1,31,0);
    VL_SIG(__PVT__EXE_ALU__DOT__Dst1,31,0);
    VL_SIG(__PVT__EXE_ALU__DOT__HI,31,0);
    VL_SIG(__PVT__EXE_ALU__DOT__LO,31,0);
    VL_SIG(__PVT__EXE_ALU__DOT__readDataB1,31,0);
    //char	__VpadToAlign1604[4];
    VL_SIGW(__PVT__EXE_ALU__DOT__mem_entry_PR,319,0,10);
    VL_SIG(__PVT__MEM_ALU__DOT__data_read_aligned,31,0);
    VL_SIG(__PVT__MEM_ALU__DOT__aluResult,31,0);
    VL_SIGW(__PVT__LSQ_LS__DOT__head_entry,191,0,6);
    VL_SIG(__PVT__RR_LS__DOT__com_OpA1,31,0);
    VL_SIG(__PVT__RR_LS__DOT__com_OpB1,31,0);
    VL_SIG(__PVT__RR_LS__DOT__signExtended_output1,31,0);
    VL_SIG(__PVT__RR_LS__DOT__readDataA1,31,0);
    VL_SIG(__PVT__RR_LS__DOT__readDataB1,31,0);
    VL_SIG(__PVT__RR_LS__DOT__Operand_A1,31,0);
    VL_SIG(__PVT__RR_LS__DOT__Operand_B1,31,0);
    VL_SIG(__PVT__RR_LS__DOT__Dest_Value1,31,0);
    VL_SIGW(__PVT__RR_LS__DOT__exe_entry_PR,319,0,10);
    VL_SIG(__PVT__EXE_LS__DOT__aluResult1,31,0);
    VL_SIG(__PVT__EXE_LS__DOT__OpA1,31,0);
    VL_SIG(__PVT__EXE_LS__DOT__OpB1,31,0);
    VL_SIG(__PVT__EXE_LS__DOT__Dst1,31,0);
    VL_SIG(__PVT__EXE_LS__DOT__HI,31,0);
    VL_SIG(__PVT__EXE_LS__DOT__LO,31,0);
    VL_SIGW(__PVT__EXE_LS__DOT__mem_entry_PR,319,0,10);
    VL_SIG(__PVT__MEM_LS__DOT__data_read_aligned,31,0);
    VL_SIG(__PVT__MEM_LS__DOT__aluResult,31,0);
    VL_SIG64(__PVT__BB,63,0);
    VL_SIG64(__PVT__EXE_ALU__DOT__ALU1__DOT__temp,63,0);
    VL_SIG64(__PVT__EXE_LS__DOT__ALU1__DOT__temp,63,0);
    VL_SIG64(__PVT__COM1__DOT__branch_result1,32,0);
    VL_SIG64(__PVT__COM1__DOT__branch_result2,32,0);
    VL_SIG(Reg_ID[64],31,0);
    VL_SIG8(RAT_fRN[32],5,0);
    VL_SIG8(__PVT__RAT_OUT[32],6,0);
    VL_SIG(__PVT__iCache1__DOT__cc0__DOT__tags[1024],16,0);
    VL_SIGW(__PVT__iCache1__DOT__cc0__DOT__blocks[1024],255,0,8);
    VL_SIG(__PVT__dCache1__DOT__cc0__DOT__tags[512],17,0);
    VL_SIGW(__PVT__dCache1__DOT__cc0__DOT__blocks[512],255,0,8);
    VL_SIG(__PVT__dCache1__DOT__cc1__DOT__tags[512],17,0);
    VL_SIGW(__PVT__dCache1__DOT__cc1__DOT__blocks[512],255,0,8);
    VL_SIGW(__PVT__ROB1__DOT__ROB[64],191,0,6);
    VL_SIGW(__PVT__ID_Queue1__DOT__FIFO[8],95,0,3);
    VL_SIGW(__PVT__RN_Queue1__DOT__FIFO[8],159,0,5);
    VL_SIG8(__PVT__RN1__DOT__RAT[32],6,0);
    VL_SIG8(__PVT__RN1__DOT__FREELIST[64],5,0);
    VL_SIGW(__PVT__ISSUE_QUEUE_ALU__DOT__QUEUE[16],191,0,6);
    VL_SIG8(__PVT__ISSUE_QUEUE_ALU__DOT__READY[16],2,0);
    VL_SIGW(__PVT__LSQ_LS__DOT__FIFO[16],191,0,6);
    VL_SIG8(__PVT__LSQ_LS__DOT__READY[16],2,0);
    VL_SIG8(__PVT__COM1__DOT__RAT[32],6,0);
    
    // LOCAL VARIABLES
    VL_SIG8(dCache1__DOT____Vlvbound1,0,0);
    VL_SIG8(ISSUE_QUEUE_ALU__DOT____Vcellinp__select0____pinNumber9,0,0);
    VL_SIG8(ISSUE_QUEUE_ALU__DOT____Vcellinp__select0____pinNumber8,0,0);
    VL_SIG8(ISSUE_QUEUE_ALU__DOT____Vcellinp__select0____pinNumber7,0,0);
    VL_SIG8(ISSUE_QUEUE_ALU__DOT____Vcellinp__select0____pinNumber6,0,0);
    VL_SIG8(ISSUE_QUEUE_ALU__DOT____Vcellinp__select1____pinNumber9,0,0);
    VL_SIG8(ISSUE_QUEUE_ALU__DOT____Vcellinp__select1____pinNumber8,0,0);
    VL_SIG8(ISSUE_QUEUE_ALU__DOT____Vcellinp__select1____pinNumber7,0,0);
    VL_SIG8(ISSUE_QUEUE_ALU__DOT____Vcellinp__select1____pinNumber6,0,0);
    VL_SIG8(ISSUE_QUEUE_ALU__DOT____Vcellinp__select2____pinNumber9,0,0);
    VL_SIG8(ISSUE_QUEUE_ALU__DOT____Vcellinp__select2____pinNumber8,0,0);
    VL_SIG8(ISSUE_QUEUE_ALU__DOT____Vcellinp__select2____pinNumber7,0,0);
    VL_SIG8(ISSUE_QUEUE_ALU__DOT____Vcellinp__select2____pinNumber6,0,0);
    VL_SIG8(ISSUE_QUEUE_ALU__DOT____Vcellinp__select3____pinNumber9,0,0);
    VL_SIG8(ISSUE_QUEUE_ALU__DOT____Vcellinp__select3____pinNumber8,0,0);
    VL_SIG8(ISSUE_QUEUE_ALU__DOT____Vcellinp__select3____pinNumber7,0,0);
    VL_SIG8(ISSUE_QUEUE_ALU__DOT____Vcellinp__select3____pinNumber6,0,0);
    VL_SIG8(__Vdly__iCache1__DOT__waitCount,3,0);
    VL_SIG8(__Vdly__dCache1__DOT__waitCount,3,0);
    VL_SIG8(__Vdly__ROB_head,5,0);
    VL_SIG8(__Vdly__ROB_tail,5,0);
    VL_SIG8(__Vdly__ROB1__DOT__counter,6,0);
    VL_SIG8(__Vdly__reg_counter,5,0);
    VL_SIG8(__Vdlyvset__ROB1__DOT__ROB__v0,0,0);
    VL_SIG8(__Vdlyvdim0__ROB1__DOT__ROB__v64,5,0);
    VL_SIG8(__Vdlyvset__ROB1__DOT__ROB__v64,0,0);
    VL_SIG8(__Vdlyvdim0__ROB1__DOT__ROB__v65,5,0);
    VL_SIG8(__Vdlyvset__ROB1__DOT__ROB__v65,0,0);
    VL_SIG8(__Vdlyvdim0__ROB1__DOT__ROB__v66,5,0);
    VL_SIG8(__Vdlyvset__ROB1__DOT__ROB__v66,0,0);
    VL_SIG8(__Vdly__ID_Queue1__DOT__head,2,0);
    VL_SIG8(__Vdly__ID_Queue1__DOT__tail,2,0);
    VL_SIG8(__Vdly__ID_Queue1__DOT__counter,3,0);
    VL_SIG8(__Vdlyvset__ID_Queue1__DOT__FIFO__v0,0,0);
    VL_SIG8(__Vdlyvdim0__ID_Queue1__DOT__FIFO__v8,2,0);
    VL_SIG8(__Vdlyvset__ID_Queue1__DOT__FIFO__v8,0,0);
    VL_SIG8(__Vdly__ID1__DOT__syscalBubbleCounter,2,0);
    VL_SIG8(__Vdly__RN_Queue1__DOT__head,2,0);
    VL_SIG8(__Vdly__RN_Queue1__DOT__tail,2,0);
    VL_SIG8(__Vdly__RN_Queue1__DOT__counter,3,0);
    VL_SIG8(__Vdlyvset__RN_Queue1__DOT__FIFO__v0,0,0);
    VL_SIG8(__Vdlyvdim0__RN_Queue1__DOT__FIFO__v8,2,0);
    VL_SIG8(__Vdlyvset__RN_Queue1__DOT__FIFO__v8,0,0);
    VL_SIG8(__Vdly__RN1__DOT__out,5,0);
    VL_SIG8(__Vdly__RN1__DOT__freelist_counter,6,0);
    VL_SIG8(__Vdlyvdim0__RN1__DOT__FREELIST__v0,5,0);
    VL_SIG8(__Vdlyvval__RN1__DOT__FREELIST__v0,5,0);
    VL_SIG8(__Vdlyvset__RN1__DOT__FREELIST__v0,0,0);
    VL_SIG8(__Vdly__RN1__DOT__in,5,0);
    VL_SIG8(__Vdlyvset__RN1__DOT__FREELIST__v1,0,0);
    VL_SIG8(__Vdlyvval__RN1__DOT__RAT__v0,6,0);
    VL_SIG8(__Vdlyvset__RN1__DOT__RAT__v0,0,0);
    VL_SIG8(__Vdlyvval__RN1__DOT__RAT__v1,6,0);
    VL_SIG8(__Vdlyvval__RN1__DOT__RAT__v2,6,0);
    VL_SIG8(__Vdlyvval__RN1__DOT__RAT__v3,6,0);
    VL_SIG8(__Vdlyvval__RN1__DOT__RAT__v4,6,0);
    VL_SIG8(__Vdlyvval__RN1__DOT__RAT__v5,6,0);
    VL_SIG8(__Vdlyvval__RN1__DOT__RAT__v6,6,0);
    VL_SIG8(__Vdlyvval__RN1__DOT__RAT__v7,6,0);
    VL_SIG8(__Vdlyvval__RN1__DOT__RAT__v8,6,0);
    VL_SIG8(__Vdlyvval__RN1__DOT__RAT__v9,6,0);
    VL_SIG8(__Vdlyvval__RN1__DOT__RAT__v10,6,0);
    VL_SIG8(__Vdlyvval__RN1__DOT__RAT__v11,6,0);
    VL_SIG8(__Vdlyvval__RN1__DOT__RAT__v12,6,0);
    VL_SIG8(__Vdlyvval__RN1__DOT__RAT__v13,6,0);
    VL_SIG8(__Vdlyvval__RN1__DOT__RAT__v14,6,0);
    VL_SIG8(__Vdlyvval__RN1__DOT__RAT__v15,6,0);
    VL_SIG8(__Vdlyvval__RN1__DOT__RAT__v16,6,0);
    VL_SIG8(__Vdlyvval__RN1__DOT__RAT__v17,6,0);
    VL_SIG8(__Vdlyvval__RN1__DOT__RAT__v18,6,0);
    VL_SIG8(__Vdlyvval__RN1__DOT__RAT__v19,6,0);
    VL_SIG8(__Vdlyvval__RN1__DOT__RAT__v20,6,0);
    VL_SIG8(__Vdlyvval__RN1__DOT__RAT__v21,6,0);
    VL_SIG8(__Vdlyvval__RN1__DOT__RAT__v22,6,0);
    VL_SIG8(__Vdlyvval__RN1__DOT__RAT__v23,6,0);
    VL_SIG8(__Vdlyvval__RN1__DOT__RAT__v24,6,0);
    VL_SIG8(__Vdlyvval__RN1__DOT__RAT__v25,6,0);
    VL_SIG8(__Vdlyvval__RN1__DOT__RAT__v26,6,0);
    VL_SIG8(__Vdlyvval__RN1__DOT__RAT__v27,6,0);
    VL_SIG8(__Vdlyvval__RN1__DOT__RAT__v28,6,0);
    VL_SIG8(__Vdlyvval__RN1__DOT__RAT__v29,6,0);
    VL_SIG8(__Vdlyvval__RN1__DOT__RAT__v30,6,0);
    VL_SIG8(__Vdlyvval__RN1__DOT__RAT__v31,6,0);
    VL_SIG8(__Vdlyvdim0__RN1__DOT__RAT__v32,4,0);
    VL_SIG8(__Vdlyvval__RN1__DOT__RAT__v32,6,0);
    VL_SIG8(__Vdlyvset__RN1__DOT__RAT__v32,0,0);
    VL_SIG8(__Vdlyvset__RN1__DOT__RAT__v33,0,0);
    VL_SIG8(__Vdlyvset__ISSUE_QUEUE_ALU__DOT__QUEUE__v0,0,0);
    VL_SIG8(__Vdly__ISSUE_QUEUE_ALU__DOT__counter,4,0);
    VL_SIG8(__Vdlyvset__ISSUE_QUEUE_ALU__DOT__QUEUE__v1,0,0);
    VL_SIG8(__Vdlyvset__ISSUE_QUEUE_ALU__DOT__QUEUE__v16,0,0);
    VL_SIG8(__Vdlyvdim0__ISSUE_QUEUE_ALU__DOT__QUEUE__v32,3,0);
    VL_SIG8(__Vdlyvset__ISSUE_QUEUE_ALU__DOT__QUEUE__v32,0,0);
    VL_SIG8(__Vdly__LSQ_LS__DOT__head,3,0);
    VL_SIG8(__Vdly__LSQ_LS__DOT__tail,3,0);
    VL_SIG8(__Vdly__LSQ_LS__DOT__counter,4,0);
    VL_SIG8(__Vdlyvset__LSQ_LS__DOT__FIFO__v0,0,0);
    VL_SIG8(__Vdlyvdim0__LSQ_LS__DOT__FIFO__v16,3,0);
    VL_SIG8(__Vdlyvset__LSQ_LS__DOT__FIFO__v16,0,0);
    VL_SIG8(__Vdlyvdim0__COM1__DOT__RAT__v0,4,0);
    VL_SIG8(__Vdlyvval__COM1__DOT__RAT__v0,6,0);
    VL_SIG8(__Vdlyvset__COM1__DOT__RAT__v0,0,0);
    VL_SIG8(__Vdlyvset__COM1__DOT__RAT__v1,0,0);
    //char	__VpadToAlign78739[5];
    VL_SIGW(__Vdlyvval__ROB1__DOT__ROB__v64,191,0,6);
    VL_SIGW(__Vdlyvval__ROB1__DOT__ROB__v65,191,0,6);
    VL_SIGW(__Vdlyvval__ROB1__DOT__ROB__v66,191,0,6);
    VL_SIG(__Vdly__IF1__DOT__FPC,31,0);
    VL_SIG(__Vdly__Instr2_IFID,31,0);
    VL_SIGW(__Vdlyvval__ID_Queue1__DOT__FIFO__v8,95,0,3);
    //char	__VpadToAlign78836[4];
    VL_SIGW(__Vdlyvval__RN_Queue1__DOT__FIFO__v8,159,0,5);
    //char	__VpadToAlign78860[4];
    VL_SIGW(__Vdlyvval__ISSUE_QUEUE_ALU__DOT__QUEUE__v16,191,0,6);
    VL_SIGW(__Vdlyvval__ISSUE_QUEUE_ALU__DOT__QUEUE__v17,191,0,6);
    VL_SIGW(__Vdlyvval__ISSUE_QUEUE_ALU__DOT__QUEUE__v18,191,0,6);
    VL_SIGW(__Vdlyvval__ISSUE_QUEUE_ALU__DOT__QUEUE__v19,191,0,6);
    VL_SIGW(__Vdlyvval__ISSUE_QUEUE_ALU__DOT__QUEUE__v20,191,0,6);
    VL_SIGW(__Vdlyvval__ISSUE_QUEUE_ALU__DOT__QUEUE__v21,191,0,6);
    VL_SIGW(__Vdlyvval__ISSUE_QUEUE_ALU__DOT__QUEUE__v22,191,0,6);
    VL_SIGW(__Vdlyvval__ISSUE_QUEUE_ALU__DOT__QUEUE__v23,191,0,6);
    VL_SIGW(__Vdlyvval__ISSUE_QUEUE_ALU__DOT__QUEUE__v24,191,0,6);
    VL_SIGW(__Vdlyvval__ISSUE_QUEUE_ALU__DOT__QUEUE__v25,191,0,6);
    VL_SIGW(__Vdlyvval__ISSUE_QUEUE_ALU__DOT__QUEUE__v26,191,0,6);
    VL_SIGW(__Vdlyvval__ISSUE_QUEUE_ALU__DOT__QUEUE__v27,191,0,6);
    VL_SIGW(__Vdlyvval__ISSUE_QUEUE_ALU__DOT__QUEUE__v28,191,0,6);
    VL_SIGW(__Vdlyvval__ISSUE_QUEUE_ALU__DOT__QUEUE__v29,191,0,6);
    VL_SIGW(__Vdlyvval__ISSUE_QUEUE_ALU__DOT__QUEUE__v30,191,0,6);
    VL_SIGW(__Vdlyvval__ISSUE_QUEUE_ALU__DOT__QUEUE__v31,191,0,6);
    VL_SIGW(__Vdlyvval__ISSUE_QUEUE_ALU__DOT__QUEUE__v32,191,0,6);
    VL_SIGW(__Vdlyvval__LSQ_LS__DOT__FIFO__v16,191,0,6);
    VL_SIG64(__Vdly__COM1__DOT__branch_result1,32,0);
    
    // INTERNAL VARIABLES
  private:
    //char	__VpadToAlign79308[4];
    VMIPS__Syms*	__VlSymsp;		// Symbol table
  public:
    
    // PARAMETERS
    
    // CONSTRUCTORS
  private:
    VMIPS_MIPS& operator= (const VMIPS_MIPS&);	///< Copying not allowed
    VMIPS_MIPS(const VMIPS_MIPS&);	///< Copying not allowed
  public:
    VMIPS_MIPS(const char* name="TOP");
    ~VMIPS_MIPS();
    
    // USER METHODS
    
    // API METHODS
    
    // INTERNAL METHODS
    void __Vconfigure(VMIPS__Syms* symsp, bool first);
    static void	_combo__TOP__v__11(VMIPS__Syms* __restrict vlSymsp);
    static void	_combo__TOP__v__15(VMIPS__Syms* __restrict vlSymsp);
    static void	_combo__TOP__v__17(VMIPS__Syms* __restrict vlSymsp);
    static void	_combo__TOP__v__21(VMIPS__Syms* __restrict vlSymsp);
    static void	_multiclk__TOP__v__13(VMIPS__Syms* __restrict vlSymsp);
    static void	_multiclk__TOP__v__19(VMIPS__Syms* __restrict vlSymsp);
    static void	_multiclk__TOP__v__22(VMIPS__Syms* __restrict vlSymsp);
    static void	_multiclk__TOP__v__9(VMIPS__Syms* __restrict vlSymsp);
    static void	_sequent__TOP__v__10(VMIPS__Syms* __restrict vlSymsp);
    static void	_sequent__TOP__v__14(VMIPS__Syms* __restrict vlSymsp);
    static void	_sequent__TOP__v__18(VMIPS__Syms* __restrict vlSymsp);
    static void	_sequent__TOP__v__2(VMIPS__Syms* __restrict vlSymsp);
    static void	_sequent__TOP__v__23(VMIPS__Syms* __restrict vlSymsp);
    static void	_sequent__TOP__v__3(VMIPS__Syms* __restrict vlSymsp);
    static void	_sequent__TOP__v__4(VMIPS__Syms* __restrict vlSymsp);
    static void	_sequent__TOP__v__6(VMIPS__Syms* __restrict vlSymsp);
    static void	_sequent__TOP__v__7(VMIPS__Syms* __restrict vlSymsp);
    static void	_settle__TOP__v__1(VMIPS__Syms* __restrict vlSymsp);
    static void	_settle__TOP__v__12(VMIPS__Syms* __restrict vlSymsp);
    static void	_settle__TOP__v__16(VMIPS__Syms* __restrict vlSymsp);
    static void	_settle__TOP__v__20(VMIPS__Syms* __restrict vlSymsp);
    static void	_settle__TOP__v__24(VMIPS__Syms* __restrict vlSymsp);
    static void	_settle__TOP__v__5(VMIPS__Syms* __restrict vlSymsp);
    static void	_settle__TOP__v__8(VMIPS__Syms* __restrict vlSymsp);
} VL_ATTR_ALIGNED(64);

#endif  /*guard*/
